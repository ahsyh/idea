import com.yihui.experimental.util.Log;

public class Case1 {
    public static void test(String[] args) {
        int i = 0;
        testOne(++i);
    }

    private static Solution s = new Solution();

    private static void testOne(int n) {
        Log.e("case" + n, "");
    }

    private static class Solution {

    }
}


class Solution {
    public int[] findOrder(int n, int[][] pres) {
        List<Integer>[] graph = new List[n];
        int[] indgrees = new int[n];
        for (int[] p: pres) {
            int from = p[1];
            int to = p[0];
            indgrees[to]++;
            List<Integer> list = graph[from];
            if (list == null) {
                graph[from] = list = new ArrayList<>();
            }
            list.add(to);
        }
        int[] result = new int[n];
        int j = 0;
        Queue<Integer> q = new LinkedList<>();
        for (int i = 0; i < n; i++) {
            if (indgrees[i] == 0) {
                q.offer(i);
            }
        }
        while (!q.isEmpty()) {
            Integer c = q.poll();
            result[j++] = c;
            if (graph[c] == null) continue;
            for (Integer to: graph[c]) {
                if (indgrees[to] > 0) {
                    if (--indgrees[to] == 0) {
                        q.offer(to);
                    }
                }
            }
        }
        return j == n ? result : new int[0];
    }
}
